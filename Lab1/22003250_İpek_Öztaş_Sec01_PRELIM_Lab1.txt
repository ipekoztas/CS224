CS224
Lab 1 Preliminary
Section 1.
İpek Öztaş
22003250
26.2.2023

	.text		
	.globl __start
 
 
 
__start:

	jal createArray
	
	la $a0,prompt3	# output prompt message on terminal
	li $v0,4	
	syscall
	
	li $v0, 5
	syscall
	
	move $s1, $v0 # N
	
	jal promptMenu
	
	la $a0,select	# output prompt message on terminal
	li $v0,4	
	syscall
	
	li $v0, 5
	syscall
	
	move $s2, $v0 # choice
	
	blt $s2, 2, opt1
	blt $s2, 3, opt2
	blt $s2, 4, opt3
	blt $s2, 4, quit
	
	quit:
	li $v0,10
	syscall
	
	
createArray:
	
	begin:
	la $a0,prompt	# output prompt message on terminal
	li $v0,4	
	syscall
	
	li $v0, 5	# syscall 5 reads an integer
	syscall
	
	li $t0, 20	#size check
	ble $v0, $0, begin
	bgt $v0, $t0, begin
	
	move $s0, $v0
	move $t0, $s0
	
	la $t1, array
	
	
loop:	

	beq $t0, $0, exit
	la $a0,prompt2	# output prompt message on terminal
	li $v0,4	
	syscall
	li $v0, 5	
	syscall
	sw $v0,0($t1) #store the integer in an array
	addi $t1, $t1, 4
	addi $t0,$t0, -1  #increment pointer
	
	j loop
exit:		
	mul $t0, $zero, 0
	jr $ra
	

	
promptMenu:
	
	la $a0,menu	# output prompt message on terminal
	li $v0,4	
	syscall
	
	la $a0,option1	# output prompt message on terminal
	li $v0,4	
	syscall
	la $a0,option2	# output prompt message on terminal
	li $v0,4	
	syscall
	la $a0,option3	# output prompt message on terminal
	li $v0,4	
	syscall
	
	
	
	jr $ra
	

	
opt1:	li $t2, 0	#store the number of elements equal to N
	move $t0, $s0
	la $t3, array
	
	next: 
		beq $t0, $0, result
		lw $t4, 0($t3)	#array element
		bne $t4, $s1, pass
		addi $t2, $t2, 1	#increment the result if the element is equal to N
		pass:
		addi $t0, $t0, -1
		addi $t3, $t3, 4
		j next
	result:
		la $a0, msg1
		li $v0, 4
		syscall
		
		move $a0, $t2
		li $v0, 1
		syscall
		
		la $a0, newLine
		li $v0, 4
		syscall
		
		jr $ra

	

opt2:
	li $t2, 0	#store the number of elements less than N
	li $t5, 0	#store the number of elements greater than N
	move $t0, $s0
	la $t3, array
	
	next2: 
		beq $t0, $0, resultB
		lw $t4, 0($t3)	#array element
		
		slt $t6, $s1, $t4
		beq $t6, $0, else
		addi $t5, $t5, 1
		j endif
	else:
		slt $t6, $t4, $s1
		beq $t6, $0, endif
		addi $t2, $t2, 1
		j endif
	endif:
		
		addi $t0, $t0, -1
		addi $t3, $t3, 4
		j next2
	resultB:
		la $a0, msg2
		li $v0, 4
		syscall
		
		move $a0, $t2
		li $v0, 1
		syscall
		
		la $a0, andd
		li $v0, 4
		syscall
		
		move $a0, $t5
		li $v0, 1
		syscall
		
		la $a0, newLine
		li $v0, 4
		syscall
		
		jr $ra
opt3:
	
	li $t2, 0	#store the number of elements evenly divisible by N
	move $t0, $s0
	la $t3, array
	
	next3: 
		beq $t0, $0, result3
		lw $t4, 0($t3)	#array element
		div $t5, $t4, $s1
		mfhi $t5 #remainder
		bne $t5, $0, pass3
		addi $t2, $t2, 1	#increment the result if the element is divisible by N
		pass3:
		addi $t0, $t0, -1
		addi $t3, $t3, 4
		j next3
	result3:
		la $a0, msg3
		li $v0, 4
		syscall
		
		move $a0, $t2
		li $v0, 1
		syscall
		
		la $a0, newLine
		li $v0, 4
		syscall
		
		jr $ra
	

	
	
	

 
 	.data
array:	.space 80
prompt:	.asciiz "Enter the number of elements: (from 1 to 20)"
prompt2:.asciiz "Enter the element: \n"
prompt3:.asciiz "Enter an integer number: \n"

menu: .asciiz "Please choose one of the below in the menu \n"
option1: .asciiz "1. Find the number of array members equal to N. \n"
option2: .asciiz "2. Find the number of array members less than and greater than N. \n"
option3: .asciiz "3. Find the number of elements evenly divisible by N. \n"
select: .asciiz "Enter the option you want (1/2/3) -4 to quit \n"

msg1:	.asciiz "The number of array members equal to N is "
msg2:	.asciiz "The number of array members less than and greater than N are "
msg3:	.asciiz "The number of elements evenly divisible by N is "


arraySize: .space 4
newLine: .asciiz "\n"
andd:	.asciiz " and "
